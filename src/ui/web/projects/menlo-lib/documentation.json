{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "BudgetComponent",
            "id": "component-BudgetComponent-9293f4abbea193186baae94d703d3e54e87b5cf8fb659dcf46c7bb5d0c722df78eba1580174efea40fae560bde1576777e1ed6f18ed81b385eda69895de0e8b0",
            "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Budget</h1> <p>It works!</>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lorumIpsum",
                    "defaultValue": "LorumIpsum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { applicationConfig, Meta, StoryObj } from '@storybook/angular';\r\nimport { RootComponent } from './root.component';\r\nimport { provideRouter } from '@angular/router';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { LorumIpsum } from '../../story.constants';\r\nimport { provideLocationMocks } from '@angular/common/testing';\r\n\r\n@Component({\r\n    template: `<p>{{ lorumIpsum }}</p>`,\r\n    standalone: true,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass LorumIpsumComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\n@Component({\r\n    standalone: true,\r\n    template: `<h1>Utilities</h1> <p>It works!</>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass UtilitiesComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\n@Component({\r\n    standalone: true,\r\n    template: `<h1>Budget</h1> <p>It works!</>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass BudgetComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\nconst meta: Meta<RootComponent> = {\r\n    title: 'Layout/Root',\r\n    component: RootComponent,\r\n    tags: ['autodocs'],\r\n    render: (args: RootComponent) => ({\r\n        props: {\r\n            ...args\r\n        }\r\n    }),\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: [\r\n                provideRouter([\r\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\r\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\r\n                    { path: 'utilities', component: UtilitiesComponent },\r\n                    { path: 'budget', component: BudgetComponent }\r\n                ]),\r\n                provideLocationMocks()\r\n            ]\r\n        })\r\n    ]\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<RootComponent>;\r\n\r\nexport const Default: Story = {\r\n    args: {\r\n        navItems: [\r\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\r\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\r\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\r\n        ]\r\n    }\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LorumIpsumComponent",
            "id": "component-LorumIpsumComponent-9293f4abbea193186baae94d703d3e54e87b5cf8fb659dcf46c7bb5d0c722df78eba1580174efea40fae560bde1576777e1ed6f18ed81b385eda69895de0e8b0",
            "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<p>{{ lorumIpsum }}</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lorumIpsum",
                    "defaultValue": "LorumIpsum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { applicationConfig, Meta, StoryObj } from '@storybook/angular';\r\nimport { RootComponent } from './root.component';\r\nimport { provideRouter } from '@angular/router';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { LorumIpsum } from '../../story.constants';\r\nimport { provideLocationMocks } from '@angular/common/testing';\r\n\r\n@Component({\r\n    template: `<p>{{ lorumIpsum }}</p>`,\r\n    standalone: true,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass LorumIpsumComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\n@Component({\r\n    standalone: true,\r\n    template: `<h1>Utilities</h1> <p>It works!</>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass UtilitiesComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\n@Component({\r\n    standalone: true,\r\n    template: `<h1>Budget</h1> <p>It works!</>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass BudgetComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\nconst meta: Meta<RootComponent> = {\r\n    title: 'Layout/Root',\r\n    component: RootComponent,\r\n    tags: ['autodocs'],\r\n    render: (args: RootComponent) => ({\r\n        props: {\r\n            ...args\r\n        }\r\n    }),\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: [\r\n                provideRouter([\r\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\r\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\r\n                    { path: 'utilities', component: UtilitiesComponent },\r\n                    { path: 'budget', component: BudgetComponent }\r\n                ]),\r\n                provideLocationMocks()\r\n            ]\r\n        })\r\n    ]\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<RootComponent>;\r\n\r\nexport const Default: Story = {\r\n    args: {\r\n        navItems: [\r\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\r\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\r\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\r\n        ]\r\n    }\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UtilitiesComponent",
            "id": "component-UtilitiesComponent-9293f4abbea193186baae94d703d3e54e87b5cf8fb659dcf46c7bb5d0c722df78eba1580174efea40fae560bde1576777e1ed6f18ed81b385eda69895de0e8b0",
            "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Utilities</h1> <p>It works!</>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lorumIpsum",
                    "defaultValue": "LorumIpsum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { applicationConfig, Meta, StoryObj } from '@storybook/angular';\r\nimport { RootComponent } from './root.component';\r\nimport { provideRouter } from '@angular/router';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { LorumIpsum } from '../../story.constants';\r\nimport { provideLocationMocks } from '@angular/common/testing';\r\n\r\n@Component({\r\n    template: `<p>{{ lorumIpsum }}</p>`,\r\n    standalone: true,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass LorumIpsumComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\n@Component({\r\n    standalone: true,\r\n    template: `<h1>Utilities</h1> <p>It works!</>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass UtilitiesComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\n@Component({\r\n    standalone: true,\r\n    template: `<h1>Budget</h1> <p>It works!</>`,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass BudgetComponent {\r\n    public lorumIpsum: string = LorumIpsum;\r\n}\r\n\r\nconst meta: Meta<RootComponent> = {\r\n    title: 'Layout/Root',\r\n    component: RootComponent,\r\n    tags: ['autodocs'],\r\n    render: (args: RootComponent) => ({\r\n        props: {\r\n            ...args\r\n        }\r\n    }),\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: [\r\n                provideRouter([\r\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\r\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\r\n                    { path: 'utilities', component: UtilitiesComponent },\r\n                    { path: 'budget', component: BudgetComponent }\r\n                ]),\r\n                provideLocationMocks()\r\n            ]\r\n        })\r\n    ]\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<RootComponent>;\r\n\r\nexport const Default: Story = {\r\n    args: {\r\n        navItems: [\r\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\r\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\r\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\r\n        ]\r\n    }\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: { ...Default.args, kind: LoadKind.Small },\r\n    decorators: [\r\n        componentWrapperDecorator(\r\n            story => `\r\n            <button class=\"btn btn-primary d-flex justify-content-evenly\" disabled>\r\n                    ${story}\r\n                    Submit\r\n            </button>`\r\n        )\r\n    ]\r\n}"
            },
            {
                "name": "Contained",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: { ...Default.args },\r\n    decorators: [\r\n        componentWrapperDecorator(\r\n            story => `\r\n            <style>\r\n                .card-body {\r\n                    height: 300px;\r\n                }\r\n            </style>\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"card-title\">Loading</h5>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    ${story}\r\n                </div>\r\n            </div>`\r\n        )\r\n    ]\r\n}"
            },
            {
                "name": "ContainedSmaller",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: { ...Default.args },\r\n    decorators: [\r\n        componentWrapperDecorator(\r\n            story => `\r\n            <style>\r\n                .card-body {\r\n                    height: 150px;\r\n                }\r\n            </style>\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"card-title\">Loading</h5>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    ${story}\r\n                </div>\r\n            </div>`\r\n        )\r\n    ]\r\n}"
            },
            {
                "name": "ContainedXL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: { ...Default.args },\r\n    decorators: [\r\n        componentWrapperDecorator(\r\n            story => `\r\n            <style>\r\n                .card-body {\r\n                    height: 500px;\r\n                }\r\n            </style>\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"card-title\">Loading</h5>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    ${story}\r\n                </div>\r\n            </div>`\r\n        )\r\n    ]\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: {\n            datasets: []\n        },\n        type: 'line'\n    }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args: {} }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args: {} }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {\r\n        navItems: [\r\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\r\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\r\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\r\n        ]\r\n    }\r\n}"
            },
            {
                "name": "Line",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        data: {\n            datasets: [\n                {\n                    label: 'Dataset 1',\n                    data: [10, 20, 30, 40, 50]\n                }\n            ],\n            labels: ['January', 'February', 'March', 'April', 'May']\n        },\n        title: 'Chart Title',\n        type: 'line',\n        scales: linearScale\n    }\n}"
            },
            {
                "name": "linearScale",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenloChartLinearScale",
                "defaultValue": "{\n    x: {\n        beginAtZero: true,\n        title: {\n            display: true,\n            text: 'Date'\n        }\n    },\n    y: {\n        beginAtZero: true,\n        title: {\n            display: true,\n            text: 'Units'\n        }\n    }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChartComponent>",
                "defaultValue": "{\n    title: 'Charts/Chart',\n    component: ChartComponent,\n    tags: ['autodocs'],\n    render: args => ({\n        props: args\n    })\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoadingComponent>",
                "defaultValue": "{\r\n    title: 'Common/Loading',\r\n    component: LoadingComponent,\r\n    tags: ['autodocs'],\r\n    render: args => ({\r\n        props: args\r\n    })\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormButtonsComponent>",
                "defaultValue": "{\r\n    title: 'Forms/Buttons',\r\n    component: FormButtonsComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        cancel: { action: 'cancel' },\r\n        submit: { action: 'submit' }\r\n    },\r\n    args: {\r\n        cancel: action('cancel'),\r\n        submit: action('submit')\r\n    }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RootComponent>",
                "defaultValue": "{\r\n    title: 'Layout/Root',\r\n    component: RootComponent,\r\n    tags: ['autodocs'],\r\n    render: (args: RootComponent) => ({\r\n        props: {\r\n            ...args\r\n        }\r\n    }),\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: [\r\n                provideRouter([\r\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\r\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\r\n                    { path: 'utilities', component: UtilitiesComponent },\r\n                    { path: 'budget', component: BudgetComponent }\r\n                ]),\r\n                provideLocationMocks()\r\n            ]\r\n        })\r\n    ]\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n    parameters: {\r\n        controls: {\r\n            matchers: {\r\n                color: /(background|color)$/i,\r\n                date: /Date$/i\r\n            }\r\n        }\r\n    }\r\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args: { kind: LoadKind.Small } }"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChartComponent>",
                "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoadingComponent>",
                "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormButtonsComponent>",
                "file": "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RootComponent>",
                "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/menlo-lib/src/lib/common/loading/loading.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: { ...Default.args, kind: LoadKind.Small },\r\n    decorators: [\r\n        componentWrapperDecorator(\r\n            story => `\r\n            <button class=\"btn btn-primary d-flex justify-content-evenly\" disabled>\r\n                    ${story}\r\n                    Submit\r\n            </button>`\r\n        )\r\n    ]\r\n}"
                },
                {
                    "name": "Contained",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: { ...Default.args },\r\n    decorators: [\r\n        componentWrapperDecorator(\r\n            story => `\r\n            <style>\r\n                .card-body {\r\n                    height: 300px;\r\n                }\r\n            </style>\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"card-title\">Loading</h5>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    ${story}\r\n                </div>\r\n            </div>`\r\n        )\r\n    ]\r\n}"
                },
                {
                    "name": "ContainedSmaller",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: { ...Default.args },\r\n    decorators: [\r\n        componentWrapperDecorator(\r\n            story => `\r\n            <style>\r\n                .card-body {\r\n                    height: 150px;\r\n                }\r\n            </style>\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"card-title\">Loading</h5>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    ${story}\r\n                </div>\r\n            </div>`\r\n        )\r\n    ]\r\n}"
                },
                {
                    "name": "ContainedXL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: { ...Default.args },\r\n    decorators: [\r\n        componentWrapperDecorator(\r\n            story => `\r\n            <style>\r\n                .card-body {\r\n                    height: 500px;\r\n                }\r\n            </style>\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"card-title\">Loading</h5>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    ${story}\r\n                </div>\r\n            </div>`\r\n        )\r\n    ]\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args: {} }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoadingComponent>",
                    "defaultValue": "{\r\n    title: 'Common/Loading',\r\n    component: LoadingComponent,\r\n    tags: ['autodocs'],\r\n    render: args => ({\r\n        props: args\r\n    })\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args: { kind: LoadKind.Small } }"
                }
            ],
            "projects/menlo-lib/src/lib/charts/chart.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: {\n            datasets: []\n        },\n        type: 'line'\n    }\n}"
                },
                {
                    "name": "Line",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        data: {\n            datasets: [\n                {\n                    label: 'Dataset 1',\n                    data: [10, 20, 30, 40, 50]\n                }\n            ],\n            labels: ['January', 'February', 'March', 'April', 'May']\n        },\n        title: 'Chart Title',\n        type: 'line',\n        scales: linearScale\n    }\n}"
                },
                {
                    "name": "linearScale",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenloChartLinearScale",
                    "defaultValue": "{\n    x: {\n        beginAtZero: true,\n        title: {\n            display: true,\n            text: 'Date'\n        }\n    },\n    y: {\n        beginAtZero: true,\n        title: {\n            display: true,\n            text: 'Units'\n        }\n    }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChartComponent>",
                    "defaultValue": "{\n    title: 'Charts/Chart',\n    component: ChartComponent,\n    tags: ['autodocs'],\n    render: args => ({\n        props: args\n    })\n}"
                }
            ],
            "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args: {} }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormButtonsComponent>",
                    "defaultValue": "{\r\n    title: 'Forms/Buttons',\r\n    component: FormButtonsComponent,\r\n    tags: ['autodocs'],\r\n    argTypes: {\r\n        cancel: { action: 'cancel' },\r\n        submit: { action: 'submit' }\r\n    },\r\n    args: {\r\n        cancel: action('cancel'),\r\n        submit: action('submit')\r\n    }\r\n}"
                }
            ],
            "projects/menlo-lib/src/lib/layout/root/root.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {\r\n        navItems: [\r\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\r\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\r\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\r\n        ]\r\n    }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RootComponent>",
                    "defaultValue": "{\r\n    title: 'Layout/Root',\r\n    component: RootComponent,\r\n    tags: ['autodocs'],\r\n    render: (args: RootComponent) => ({\r\n        props: {\r\n            ...args\r\n        }\r\n    }),\r\n    decorators: [\r\n        applicationConfig({\r\n            providers: [\r\n                provideRouter([\r\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\r\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\r\n                    { path: 'utilities', component: UtilitiesComponent },\r\n                    { path: 'budget', component: BudgetComponent }\r\n                ]),\r\n                provideLocationMocks()\r\n            ]\r\n        })\r\n    ]\r\n}"
                }
            ],
            "projects/menlo-lib/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n    parameters: {\r\n        controls: {\r\n            matchers: {\r\n                color: /(background|color)$/i,\r\n                date: /Date$/i\r\n            }\r\n        }\r\n    }\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/menlo-lib/src/lib/charts/chart.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChartComponent>",
                    "file": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/menlo-lib/src/lib/common/loading/loading.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoadingComponent>",
                    "file": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormButtonsComponent>",
                    "file": "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/menlo-lib/src/lib/layout/root/root.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RootComponent>",
                    "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/menlo-lib/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Line",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linearScale",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/charts/chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Contained",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContainedSmaller",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContainedXL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/common/loading/loading.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/forms/form-buttons/form-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "BudgetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "LorumIpsumComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "UtilitiesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}