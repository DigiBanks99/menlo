{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "BudgetComponent",
            "id": "component-BudgetComponent-7a82a39cd00524df0148241fe3ed3ad7842018c252e9d9d7a8bebe90218acbcd93a9091cbc7f4aed588a425c8dc815a0ee2e599458c6814814a0aef92c291202",
            "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Budget</h1> <p>It works!</>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lorumIpsum",
                    "defaultValue": "LorumIpsum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { applicationConfig, Meta, StoryObj } from '@storybook/angular';\nimport { RootComponent } from './root.component';\nimport { provideRouter } from '@angular/router';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { LorumIpsum } from '../../story.constants';\nimport { provideLocationMocks } from '@angular/common/testing';\n\n@Component({\n    template: `<p>{{ lorumIpsum }}</p>`,\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass LorumIpsumComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\n@Component({\n    standalone: true,\n    template: `<h1>Utilities</h1> <p>It works!</>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass UtilitiesComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\n@Component({\n    standalone: true,\n    template: `<h1>Budget</h1> <p>It works!</>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass BudgetComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\nconst meta: Meta<RootComponent> = {\n    title: 'Layout/Root',\n    component: RootComponent,\n    tags: ['autodocs'],\n    render: (args: RootComponent) => ({\n        props: {\n            ...args\n        }\n    }),\n    decorators: [\n        applicationConfig({\n            providers: [\n                provideRouter([\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\n                    { path: 'utilities', component: UtilitiesComponent },\n                    { path: 'budget', component: BudgetComponent }\n                ]),\n                provideLocationMocks()\n            ]\n        })\n    ]\n};\n\nexport default meta;\n\ntype Story = StoryObj<RootComponent>;\n\nexport const Default: Story = {\n    args: {\n        navItems: [\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\n        ]\n    }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LorumIpsumComponent",
            "id": "component-LorumIpsumComponent-7a82a39cd00524df0148241fe3ed3ad7842018c252e9d9d7a8bebe90218acbcd93a9091cbc7f4aed588a425c8dc815a0ee2e599458c6814814a0aef92c291202",
            "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<p>{{ lorumIpsum }}</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lorumIpsum",
                    "defaultValue": "LorumIpsum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { applicationConfig, Meta, StoryObj } from '@storybook/angular';\nimport { RootComponent } from './root.component';\nimport { provideRouter } from '@angular/router';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { LorumIpsum } from '../../story.constants';\nimport { provideLocationMocks } from '@angular/common/testing';\n\n@Component({\n    template: `<p>{{ lorumIpsum }}</p>`,\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass LorumIpsumComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\n@Component({\n    standalone: true,\n    template: `<h1>Utilities</h1> <p>It works!</>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass UtilitiesComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\n@Component({\n    standalone: true,\n    template: `<h1>Budget</h1> <p>It works!</>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass BudgetComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\nconst meta: Meta<RootComponent> = {\n    title: 'Layout/Root',\n    component: RootComponent,\n    tags: ['autodocs'],\n    render: (args: RootComponent) => ({\n        props: {\n            ...args\n        }\n    }),\n    decorators: [\n        applicationConfig({\n            providers: [\n                provideRouter([\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\n                    { path: 'utilities', component: UtilitiesComponent },\n                    { path: 'budget', component: BudgetComponent }\n                ]),\n                provideLocationMocks()\n            ]\n        })\n    ]\n};\n\nexport default meta;\n\ntype Story = StoryObj<RootComponent>;\n\nexport const Default: Story = {\n    args: {\n        navItems: [\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\n        ]\n    }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UtilitiesComponent",
            "id": "component-UtilitiesComponent-7a82a39cd00524df0148241fe3ed3ad7842018c252e9d9d7a8bebe90218acbcd93a9091cbc7f4aed588a425c8dc815a0ee2e599458c6814814a0aef92c291202",
            "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Utilities</h1> <p>It works!</>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lorumIpsum",
                    "defaultValue": "LorumIpsum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { applicationConfig, Meta, StoryObj } from '@storybook/angular';\nimport { RootComponent } from './root.component';\nimport { provideRouter } from '@angular/router';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { LorumIpsum } from '../../story.constants';\nimport { provideLocationMocks } from '@angular/common/testing';\n\n@Component({\n    template: `<p>{{ lorumIpsum }}</p>`,\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass LorumIpsumComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\n@Component({\n    standalone: true,\n    template: `<h1>Utilities</h1> <p>It works!</>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass UtilitiesComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\n@Component({\n    standalone: true,\n    template: `<h1>Budget</h1> <p>It works!</>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nclass BudgetComponent {\n    public lorumIpsum: string = LorumIpsum;\n}\n\nconst meta: Meta<RootComponent> = {\n    title: 'Layout/Root',\n    component: RootComponent,\n    tags: ['autodocs'],\n    render: (args: RootComponent) => ({\n        props: {\n            ...args\n        }\n    }),\n    decorators: [\n        applicationConfig({\n            providers: [\n                provideRouter([\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\n                    { path: 'utilities', component: UtilitiesComponent },\n                    { path: 'budget', component: BudgetComponent }\n                ]),\n                provideLocationMocks()\n            ]\n        })\n    ]\n};\n\nexport default meta;\n\ntype Story = StoryObj<RootComponent>;\n\nexport const Default: Story = {\n    args: {\n        navItems: [\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\n        ]\n    }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        navItems: [\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\n        ]\n    }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RootComponent>",
                "defaultValue": "{\n    title: 'Layout/Root',\n    component: RootComponent,\n    tags: ['autodocs'],\n    render: (args: RootComponent) => ({\n        props: {\n            ...args\n        }\n    }),\n    decorators: [\n        applicationConfig({\n            providers: [\n                provideRouter([\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\n                    { path: 'utilities', component: UtilitiesComponent },\n                    { path: 'budget', component: BudgetComponent }\n                ]),\n                provideLocationMocks()\n            ]\n        })\n    ]\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-lib/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n    parameters: {\n        controls: {\n            matchers: {\n                color: /(background|color)$/i,\n                date: /Date$/i\n            }\n        }\n    }\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RootComponent>",
                "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/menlo-lib/src/lib/layout/root/root.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        navItems: [\n            { description: 'Lorum Ipsum', alternateText: 'Lorum Ipsum', route: 'lorum-ipsum', iconName: 'article' },\n            { description: 'Utilities', alternateText: 'Utilities', route: 'utilities', iconName: 'water_ec' },\n            { description: 'Budget', alternateText: 'Budget', route: 'budget', iconName: 'account_balance_wallet' }\n        ]\n    }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RootComponent>",
                    "defaultValue": "{\n    title: 'Layout/Root',\n    component: RootComponent,\n    tags: ['autodocs'],\n    render: (args: RootComponent) => ({\n        props: {\n            ...args\n        }\n    }),\n    decorators: [\n        applicationConfig({\n            providers: [\n                provideRouter([\n                    { path: '', pathMatch: 'full', redirectTo: 'lorum-ipsum' },\n                    { path: 'lorum-ipsum', component: LorumIpsumComponent },\n                    { path: 'utilities', component: UtilitiesComponent },\n                    { path: 'budget', component: BudgetComponent }\n                ]),\n                provideLocationMocks()\n            ]\n        })\n    ]\n}"
                }
            ],
            "projects/menlo-lib/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-lib/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n    parameters: {\n        controls: {\n            matchers: {\n                color: /(background|color)$/i,\n                date: /Date$/i\n            }\n        }\n    }\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/menlo-lib/src/lib/layout/root/root.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RootComponent>",
                    "file": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/menlo-lib/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "BudgetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "LorumIpsumComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "UtilitiesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-lib/src/lib/layout/root/root.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}