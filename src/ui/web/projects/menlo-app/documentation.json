{
    "pipes": [],
    "interfaces": [
        {
            "name": "ApplianceUsage",
            "id": "interface-ApplianceUsage-a97297fc2c51d284b4b19c787006b17bc4a218d59283304c427a3ea11a46e837c28c21d596d636f82d2d4fb04f5db29f488aabea53a7a13cec1c6fe44356adf2",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-usage/electricity-usage.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ApplianceUsage {\n    applianceId: number;\n    hoursOfUse: number;\n}\n\nexport class ElectricityUsage {\n    private _applianceUsage: ApplianceUsage[] = [];\n    private _date: string | undefined;\n    private _units: number | undefined;\n    private _usage: number | undefined;\n\n    public get date(): string {\n        if (this._date === undefined) {\n            throw new Error('date is required');\n        }\n        return this._date;\n    }\n    public set date(value: string) {\n        this._date = value;\n    }\n\n    public get units(): number {\n        if (this._units === undefined) {\n            throw new Error('units is required');\n        }\n        return this._units;\n    }\n    public set units(value: number) {\n        this._units = value;\n    }\n\n    public get usage(): number {\n        if (this._usage === undefined) {\n            throw new Error('usage is required');\n        }\n        return this._usage;\n    }\n    public set usage(value: number) {\n        this._usage = value;\n    }\n\n    public get applianceUsage(): ApplianceUsage[] {\n        return this._applianceUsage;\n    }\n    public set applianceUsage(value: ApplianceUsage[]) {\n        this._applianceUsage = value;\n    }\n}\n",
            "properties": [
                {
                    "name": "applianceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "hoursOfUse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ApplianceUsageInfo",
            "id": "interface-ApplianceUsageInfo-3c865b71707082160a6919088d80c12f8f493f2a8d268531a9986cfa9cb165074ff12e411bc2dcf480cb2dd50843a7c5c22daa15edf73f5b7229715786b55539",
            "file": "projects/menlo-app/src/app/utilities/electricity/capture-electricity-usage.request.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DateOrString, formatDate } from 'menlo-lib';\r\n\r\nexport interface ApplianceUsageInfo {\r\n    applianceId: number;\r\n    hoursOfUse: number;\r\n}\r\n\r\nexport class CaptureElectricityUsageRequest {\r\n    public applianceUsages: ApplianceUsageInfo[];\r\n\r\n    constructor(\r\n        public date: string,\r\n        public units: number,\r\n        applianceUsages?: ApplianceUsageInfo[]\r\n    ) {\r\n        this.date = date;\r\n        this.units = units;\r\n        this.applianceUsages = applianceUsages ?? [];\r\n    }\r\n\r\n    public addApplianceUsage(applianceId: number, hoursOfUse: number): void {\r\n        this.applianceUsages.push({ applianceId, hoursOfUse });\r\n    }\r\n}\r\n\r\nexport class CaptureElectricityUsageRequestFactory {\r\n    public static create(date: DateOrString, units: number, applianceUsages?: ApplianceUsageInfo[]): CaptureElectricityUsageRequest {\r\n        return new CaptureElectricityUsageRequest(formatDate(date), units, applianceUsages);\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "applianceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "hoursOfUse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ApplianceUsageResponse",
            "id": "interface-ApplianceUsageResponse-5956d0ae14a6e3957ed9ccc220fca49ef6ef002bd0a6e0edc556d04257b7ec3854337dd5167cba86cd58076cd663d09e7635ce115063d021b1688bad091b2fab",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-usage.response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ApplianceUsageResponse {\n    applianceId: number;\n    hoursOfUse: number;\n}\n\nexport interface ElecricityUsageResponse {\n    date: string;\n    units: number;\n    usage: number;\n    applianceUsages: ApplianceUsageResponse[];\n}\n",
            "properties": [
                {
                    "name": "applianceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "hoursOfUse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ElecricityUsageResponse",
            "id": "interface-ElecricityUsageResponse-5956d0ae14a6e3957ed9ccc220fca49ef6ef002bd0a6e0edc556d04257b7ec3854337dd5167cba86cd58076cd663d09e7635ce115063d021b1688bad091b2fab",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-usage.response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ApplianceUsageResponse {\n    applianceId: number;\n    hoursOfUse: number;\n}\n\nexport interface ElecricityUsageResponse {\n    date: string;\n    units: number;\n    usage: number;\n    applianceUsages: ApplianceUsageResponse[];\n}\n",
            "properties": [
                {
                    "name": "applianceUsages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplianceUsageResponse[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "units",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "usage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UtilitiesServiceTestingOptions",
            "id": "interface-UtilitiesServiceTestingOptions-9061b454e88008c8fa21b376376de758b1fca4770a55d24425ceff5e6890293ec478734eee8552cabc88f90423ce374214b93d91cf402c7c96820c520a0557ca",
            "file": "projects/menlo-app/src/app/utilities/utilities.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient, HttpParams, provideHttpClient } from '@angular/common/http';\r\nimport { EnvironmentProviders, Injectable, Provider, signal } from '@angular/core';\r\nimport { CaptureElectricityUsageRequest, ElecricityUsageResponse, ElectricityPurchaseRequest, ElectricityUsageQuery } from './electricity';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { provideHttpClientTesting } from '@angular/common/http/testing';\r\nimport { provideLocationMocks } from '@angular/common/testing';\r\nimport { provideRouter } from '@angular/router';\r\nimport { NoopComponent } from 'menlo-lib';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UtilitiesService {\r\n    public loading = signal(false);\r\n\r\n    constructor(private readonly _http: HttpClient) {}\r\n\r\n    public captureElectricalUsage(request: CaptureElectricityUsageRequest): Observable<string> {\r\n        this.loading.set(true);\r\n        return this._http.post<string>(`/api/utilities/electricity/usage`, request).pipe(tap(() => this.loading.set(false)));\r\n    }\r\n\r\n    public captureElectricityPurchase(request: ElectricityPurchaseRequest) {\r\n        this.loading.set(true);\r\n        return this._http.post<string>(`/api/utilities/electricity/purchase`, request).pipe(tap(() => this.loading.set(false)));\r\n    }\r\n\r\n    public getElectricityUsage(query: ElectricityUsageQuery): Observable<ElecricityUsageResponse[]> {\r\n        this.loading.set(true);\r\n        let queryString = new HttpParams().set('startDate', query.startDate);\r\n\r\n        if (query.endDate !== null) {\r\n            queryString = queryString.set('endDate', query.endDate);\r\n        }\r\n\r\n        queryString = queryString.set('timeZone', query.timeZone);\r\n\r\n        return this._http\r\n            .get<ElecricityUsageResponse[]>(`/api/utilities/electricity`, { params: queryString })\r\n            .pipe(tap(() => this.loading.set(false)));\r\n    }\r\n}\r\n\r\nexport function provideUtilitiesService(): Provider[] {\r\n    return [\r\n        UtilitiesService,\r\n        {\r\n            provide: APP_BASE_HREF,\r\n            useValue: '/'\r\n        }\r\n    ];\r\n}\r\n\r\nexport interface UtilitiesServiceTestingOptions {\r\n    loading: boolean;\r\n}\r\n\r\nexport function provideUtilitiesServiceTesting(options: UtilitiesServiceTestingOptions | null = null): (Provider | EnvironmentProviders)[] {\r\n    const providers: (Provider | EnvironmentProviders)[] = [\r\n        provideUtilitiesService(),\r\n        provideHttpClient(),\r\n        provideHttpClientTesting(),\r\n        provideRouter([\r\n            {\r\n                path: 'dashboard',\r\n                component: NoopComponent\r\n            }\r\n        ]),\r\n        provideLocationMocks()\r\n    ];\r\n\r\n    if (options !== null) {\r\n        providers.push({\r\n            provide: UtilitiesService,\r\n            useFactory: (http: HttpClient) => {\r\n                const service = new UtilitiesService(http);\r\n                service.loading.set(options.loading);\r\n                return service;\r\n            },\r\n            deps: [HttpClient]\r\n        });\r\n    }\r\n\r\n    return providers;\r\n}\r\n",
            "properties": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "UtilitiesService",
            "id": "injectable-UtilitiesService-9061b454e88008c8fa21b376376de758b1fca4770a55d24425ceff5e6890293ec478734eee8552cabc88f90423ce374214b93d91cf402c7c96820c520a0557ca",
            "file": "projects/menlo-app/src/app/utilities/utilities.service.ts",
            "properties": [
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "captureElectricalUsage",
                    "args": [
                        {
                            "name": "request",
                            "type": "CaptureElectricityUsageRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "CaptureElectricityUsageRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "captureElectricityPurchase",
                    "args": [
                        {
                            "name": "request",
                            "type": "ElectricityPurchaseRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "ElectricityPurchaseRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getElectricityUsage",
                    "args": [
                        {
                            "name": "query",
                            "type": "ElectricityUsageQuery",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ElecricityUsageResponse[]>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "ElectricityUsageQuery",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpParams, provideHttpClient } from '@angular/common/http';\r\nimport { EnvironmentProviders, Injectable, Provider, signal } from '@angular/core';\r\nimport { CaptureElectricityUsageRequest, ElecricityUsageResponse, ElectricityPurchaseRequest, ElectricityUsageQuery } from './electricity';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { provideHttpClientTesting } from '@angular/common/http/testing';\r\nimport { provideLocationMocks } from '@angular/common/testing';\r\nimport { provideRouter } from '@angular/router';\r\nimport { NoopComponent } from 'menlo-lib';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UtilitiesService {\r\n    public loading = signal(false);\r\n\r\n    constructor(private readonly _http: HttpClient) {}\r\n\r\n    public captureElectricalUsage(request: CaptureElectricityUsageRequest): Observable<string> {\r\n        this.loading.set(true);\r\n        return this._http.post<string>(`/api/utilities/electricity/usage`, request).pipe(tap(() => this.loading.set(false)));\r\n    }\r\n\r\n    public captureElectricityPurchase(request: ElectricityPurchaseRequest) {\r\n        this.loading.set(true);\r\n        return this._http.post<string>(`/api/utilities/electricity/purchase`, request).pipe(tap(() => this.loading.set(false)));\r\n    }\r\n\r\n    public getElectricityUsage(query: ElectricityUsageQuery): Observable<ElecricityUsageResponse[]> {\r\n        this.loading.set(true);\r\n        let queryString = new HttpParams().set('startDate', query.startDate);\r\n\r\n        if (query.endDate !== null) {\r\n            queryString = queryString.set('endDate', query.endDate);\r\n        }\r\n\r\n        queryString = queryString.set('timeZone', query.timeZone);\r\n\r\n        return this._http\r\n            .get<ElecricityUsageResponse[]>(`/api/utilities/electricity`, { params: queryString })\r\n            .pipe(tap(() => this.loading.set(false)));\r\n    }\r\n}\r\n\r\nexport function provideUtilitiesService(): Provider[] {\r\n    return [\r\n        UtilitiesService,\r\n        {\r\n            provide: APP_BASE_HREF,\r\n            useValue: '/'\r\n        }\r\n    ];\r\n}\r\n\r\nexport interface UtilitiesServiceTestingOptions {\r\n    loading: boolean;\r\n}\r\n\r\nexport function provideUtilitiesServiceTesting(options: UtilitiesServiceTestingOptions | null = null): (Provider | EnvironmentProviders)[] {\r\n    const providers: (Provider | EnvironmentProviders)[] = [\r\n        provideUtilitiesService(),\r\n        provideHttpClient(),\r\n        provideHttpClientTesting(),\r\n        provideRouter([\r\n            {\r\n                path: 'dashboard',\r\n                component: NoopComponent\r\n            }\r\n        ]),\r\n        provideLocationMocks()\r\n    ];\r\n\r\n    if (options !== null) {\r\n        providers.push({\r\n            provide: UtilitiesService,\r\n            useFactory: (http: HttpClient) => {\r\n                const service = new UtilitiesService(http);\r\n                service.loading.set(options.loading);\r\n                return service;\r\n            },\r\n            deps: [HttpClient]\r\n        });\r\n    }\r\n\r\n    return providers;\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "CaptureElectricityUsageRequest",
            "id": "class-CaptureElectricityUsageRequest-3c865b71707082160a6919088d80c12f8f493f2a8d268531a9986cfa9cb165074ff12e411bc2dcf480cb2dd50843a7c5c22daa15edf73f5b7229715786b55539",
            "file": "projects/menlo-app/src/app/utilities/electricity/capture-electricity-usage.request.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DateOrString, formatDate } from 'menlo-lib';\r\n\r\nexport interface ApplianceUsageInfo {\r\n    applianceId: number;\r\n    hoursOfUse: number;\r\n}\r\n\r\nexport class CaptureElectricityUsageRequest {\r\n    public applianceUsages: ApplianceUsageInfo[];\r\n\r\n    constructor(\r\n        public date: string,\r\n        public units: number,\r\n        applianceUsages?: ApplianceUsageInfo[]\r\n    ) {\r\n        this.date = date;\r\n        this.units = units;\r\n        this.applianceUsages = applianceUsages ?? [];\r\n    }\r\n\r\n    public addApplianceUsage(applianceId: number, hoursOfUse: number): void {\r\n        this.applianceUsages.push({ applianceId, hoursOfUse });\r\n    }\r\n}\r\n\r\nexport class CaptureElectricityUsageRequestFactory {\r\n    public static create(date: DateOrString, units: number, applianceUsages?: ApplianceUsageInfo[]): CaptureElectricityUsageRequest {\r\n        return new CaptureElectricityUsageRequest(formatDate(date), units, applianceUsages);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "date",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "units",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "applianceUsages",
                        "type": "ApplianceUsageInfo[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "date",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "units",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "applianceUsages",
                        "type": "ApplianceUsageInfo[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "applianceUsages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplianceUsageInfo[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "units",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addApplianceUsage",
                    "args": [
                        {
                            "name": "applianceId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hoursOfUse",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "applianceId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hoursOfUse",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CaptureElectricityUsageRequestFactory",
            "id": "class-CaptureElectricityUsageRequestFactory-3c865b71707082160a6919088d80c12f8f493f2a8d268531a9986cfa9cb165074ff12e411bc2dcf480cb2dd50843a7c5c22daa15edf73f5b7229715786b55539",
            "file": "projects/menlo-app/src/app/utilities/electricity/capture-electricity-usage.request.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DateOrString, formatDate } from 'menlo-lib';\r\n\r\nexport interface ApplianceUsageInfo {\r\n    applianceId: number;\r\n    hoursOfUse: number;\r\n}\r\n\r\nexport class CaptureElectricityUsageRequest {\r\n    public applianceUsages: ApplianceUsageInfo[];\r\n\r\n    constructor(\r\n        public date: string,\r\n        public units: number,\r\n        applianceUsages?: ApplianceUsageInfo[]\r\n    ) {\r\n        this.date = date;\r\n        this.units = units;\r\n        this.applianceUsages = applianceUsages ?? [];\r\n    }\r\n\r\n    public addApplianceUsage(applianceId: number, hoursOfUse: number): void {\r\n        this.applianceUsages.push({ applianceId, hoursOfUse });\r\n    }\r\n}\r\n\r\nexport class CaptureElectricityUsageRequestFactory {\r\n    public static create(date: DateOrString, units: number, applianceUsages?: ApplianceUsageInfo[]): CaptureElectricityUsageRequest {\r\n        return new CaptureElectricityUsageRequest(formatDate(date), units, applianceUsages);\r\n    }\r\n}\r\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateOrString",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "units",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "applianceUsages",
                            "type": "ApplianceUsageInfo[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "CaptureElectricityUsageRequest",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateOrString",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "units",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "applianceUsages",
                            "type": "ApplianceUsageInfo[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ElectricityPurchaseRequest",
            "id": "class-ElectricityPurchaseRequest-5a9a88419cf2780b3a5aa0e2d1bebbd5909f64b6d72c2e2ba664046bd023aa7ec67ee377db8d61ffb6c20cf1fab7643b3c9d9fc0f670dca559be26c999fc529d",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-purchase.request.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DateOrString, formatDate } from 'menlo-lib';\r\n\r\nexport class ElectricityPurchaseRequest {\r\n    constructor(\r\n        public date: string,\r\n        public units: number,\r\n        public cost: number\r\n    ) {\r\n        this.date = date;\r\n        this.units = units;\r\n        this.cost = cost;\r\n    }\r\n}\r\n\r\nexport class ElectricityPurchaseRequestFactory {\r\n    public static create(date: DateOrString, units: number, cost: number): ElectricityPurchaseRequest {\r\n        return new ElectricityPurchaseRequest(formatDate(date), units, cost);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "date",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "units",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cost",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "date",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "units",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cost",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "cost",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "units",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ElectricityPurchaseRequestFactory",
            "id": "class-ElectricityPurchaseRequestFactory-5a9a88419cf2780b3a5aa0e2d1bebbd5909f64b6d72c2e2ba664046bd023aa7ec67ee377db8d61ffb6c20cf1fab7643b3c9d9fc0f670dca559be26c999fc529d",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-purchase.request.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DateOrString, formatDate } from 'menlo-lib';\r\n\r\nexport class ElectricityPurchaseRequest {\r\n    constructor(\r\n        public date: string,\r\n        public units: number,\r\n        public cost: number\r\n    ) {\r\n        this.date = date;\r\n        this.units = units;\r\n        this.cost = cost;\r\n    }\r\n}\r\n\r\nexport class ElectricityPurchaseRequestFactory {\r\n    public static create(date: DateOrString, units: number, cost: number): ElectricityPurchaseRequest {\r\n        return new ElectricityPurchaseRequest(formatDate(date), units, cost);\r\n    }\r\n}\r\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateOrString",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "units",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cost",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ElectricityPurchaseRequest",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateOrString",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "units",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cost",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ElectricityUsage",
            "id": "class-ElectricityUsage-a97297fc2c51d284b4b19c787006b17bc4a218d59283304c427a3ea11a46e837c28c21d596d636f82d2d4fb04f5db29f488aabea53a7a13cec1c6fe44356adf2",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-usage/electricity-usage.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface ApplianceUsage {\n    applianceId: number;\n    hoursOfUse: number;\n}\n\nexport class ElectricityUsage {\n    private _applianceUsage: ApplianceUsage[] = [];\n    private _date: string | undefined;\n    private _units: number | undefined;\n    private _usage: number | undefined;\n\n    public get date(): string {\n        if (this._date === undefined) {\n            throw new Error('date is required');\n        }\n        return this._date;\n    }\n    public set date(value: string) {\n        this._date = value;\n    }\n\n    public get units(): number {\n        if (this._units === undefined) {\n            throw new Error('units is required');\n        }\n        return this._units;\n    }\n    public set units(value: number) {\n        this._units = value;\n    }\n\n    public get usage(): number {\n        if (this._usage === undefined) {\n            throw new Error('usage is required');\n        }\n        return this._usage;\n    }\n    public set usage(value: number) {\n        this._usage = value;\n    }\n\n    public get applianceUsage(): ApplianceUsage[] {\n        return this._applianceUsage;\n    }\n    public set applianceUsage(value: ApplianceUsage[]) {\n        this._applianceUsage = value;\n    }\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_applianceUsage",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplianceUsage[]",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_units",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_usage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "accessors": {
                "date": {
                    "name": "date",
                    "setSignature": {
                        "name": "date",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "date",
                        "type": "string",
                        "returnType": "string",
                        "line": 12
                    }
                },
                "units": {
                    "name": "units",
                    "setSignature": {
                        "name": "units",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 28,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "units",
                        "type": "number",
                        "returnType": "number",
                        "line": 22
                    }
                },
                "usage": {
                    "name": "usage",
                    "setSignature": {
                        "name": "usage",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 38,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "usage",
                        "type": "number",
                        "returnType": "number",
                        "line": 32
                    }
                },
                "applianceUsage": {
                    "name": "applianceUsage",
                    "setSignature": {
                        "name": "applianceUsage",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "ApplianceUsage[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 45,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "ApplianceUsage[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "applianceUsage",
                        "type": "[]",
                        "returnType": "ApplianceUsage[]",
                        "line": 42
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ElectricityUsageQuery",
            "id": "class-ElectricityUsageQuery-47509edf0e837a8c66f6b1250172ad3d390076b9c80c208579a5037433df0b96f354bbab0e7b42e3a3f5f8010efbd84b6dfbe55c5dec3a6c434495f9f0f96b10",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-usage.query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DateOrString, formatDate } from 'menlo-lib';\n\nexport class ElectricityUsageQuery {\n    constructor(\n        public readonly startDate: string,\n        public readonly endDate: string | null,\n        public readonly timeZone: string\n    ) {\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.timeZone = timeZone;\n    }\n}\n\nexport class ElectricityUsageQueryFactory {\n    public static create(startDate: DateOrString, endDate?: DateOrString, timeZone?: string): ElectricityUsageQuery {\n        return new ElectricityUsageQuery(\n            formatDate(startDate),\n            endDate !== undefined ? formatDate(endDate) : null,\n            timeZone === undefined ? Intl.DateTimeFormat().resolvedOptions().timeZone : timeZone\n        );\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "startDate",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "endDate",
                        "type": "string | null",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeZone",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "startDate",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "endDate",
                        "type": "string | null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeZone",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "timeZone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ElectricityUsageQueryFactory",
            "id": "class-ElectricityUsageQueryFactory-47509edf0e837a8c66f6b1250172ad3d390076b9c80c208579a5037433df0b96f354bbab0e7b42e3a3f5f8010efbd84b6dfbe55c5dec3a6c434495f9f0f96b10",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-usage.query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DateOrString, formatDate } from 'menlo-lib';\n\nexport class ElectricityUsageQuery {\n    constructor(\n        public readonly startDate: string,\n        public readonly endDate: string | null,\n        public readonly timeZone: string\n    ) {\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.timeZone = timeZone;\n    }\n}\n\nexport class ElectricityUsageQueryFactory {\n    public static create(startDate: DateOrString, endDate?: DateOrString, timeZone?: string): ElectricityUsageQuery {\n        return new ElectricityUsageQuery(\n            formatDate(startDate),\n            endDate !== undefined ? formatDate(endDate) : null,\n            timeZone === undefined ? Intl.DateTimeFormat().resolvedOptions().timeZone : timeZone\n        );\n    }\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "startDate",
                            "type": "DateOrString",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "endDate",
                            "type": "DateOrString",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "timeZone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ElectricityUsageQuery",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "startDate",
                            "type": "DateOrString",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "endDate",
                            "type": "DateOrString",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeZone",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e88b2c3c23252f9b0331425ce2ee0232730195eeccaad094622ea2f619507a455230fb176c76e204522787fe7adfcfa19a2ed6ce306c796ccecf275d2ed39354",
            "file": "projects/menlo-app/src/app/app.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "menlo-root",
            "styleUrls": [],
            "styles": [],
            "template": "<menlo-layout-root [navItems]=\"navItems\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navItems",
                    "defaultValue": "this.mapRoutesToNavItems(routes)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "mapRoutesToNavItems",
                    "args": [
                        {
                            "name": "routes",
                            "type": "MenloRoutes",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "NavItem[]",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "routes",
                            "type": "MenloRoutes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RootComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { NavItem, RootComponent } from 'menlo-lib';\r\nimport { MenloRoutes, routes } from './app.routes';\r\n\r\n@Component({\r\n    selector: 'menlo-root',\r\n    standalone: true,\r\n    imports: [RootComponent],\r\n    template: `<menlo-layout-root [navItems]=\"navItems\" />`,\r\n    styleUrl: './app.component.scss',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent {\r\n    public navItems: NavItem[] = this.mapRoutesToNavItems(routes);\r\n\r\n    private mapRoutesToNavItems(routes: MenloRoutes): NavItem[] {\r\n        const navItems = routes\r\n            .filter(route => (route.path ?? '').length > 0)\r\n            .map(\r\n                route =>\r\n                    ({\r\n                        route: route.path,\r\n                        description: route.title,\r\n                        alternateText: route.title,\r\n                        iconName: (route.data ?? { iconName: null })['iconName'] ?? null\r\n                    }) as NavItem\r\n            );\r\n\r\n        return navItems;\r\n    }\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ElectricityCaptureComponent",
            "id": "component-ElectricityCaptureComponent-a8da8885e48f52ea16aa006ac614ec1615351afb7606ed3da564e5c465d6eb509bdcf409aabadd9ed5ef01ccc12bf6a00b3b7216bf4c07457ea01839018fd032",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-capture/electricity-capture.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "menlo-electricity-capture",
            "styleUrls": [],
            "styles": [],
            "template": "<header class=\"d-flex flex-nowrap p-0\">           <h1 class=\"me-auto\">Electricity Capture</h1>\n           <menlo-form-buttons (submit)=\"onSubmit()\" (cancel)=\"onCancel()\"></menlo-form-buttons>\n       </header>\n       <article>\n           @if (loading()) {\n               <menlo-loading />\n           } @else {\n               <form [formGroup]=\"form\">\n                   <div class=\"form-floating\">\n                       <input type=\"date\" class=\"form-control\" id=\"date\" formControlName=\"date\" placeholder=\"Date\" />\n                       <label for=\"date\">Date</label>\n                   </div>\n                   <div class=\"form-group input-group\">\n                       <div class=\"form-floating\">\n                           <input type=\"number\" class=\"form-control\" id=\"units\" formControlName=\"units\" placeholder=\"Units\" />\n                           <label for=\"units\">Units</label>\n                       </div>\n                       <span class=\"input-group-text\">kW/h</span>\n                   </div>\n               </form>\n           }\n       </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup<ElectricityCaptureForm>({\r\n        date: new FormControl<Date>(new Date(), { nonNullable: true }),\r\n        units: new FormControl<number>(0, { nonNullable: true }),\r\n        applianceUsages: new FormArray<FormGroup<ApplianceUsageForm>>([])\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "this._utilitiesService.loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormButtonsComponent",
                    "type": "component"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, InputSignal } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { UtilitiesService } from '@utilities/utilities.service';\r\nimport { CaptureElectricityUsageRequest, CaptureElectricityUsageRequestFactory } from '../capture-electricity-usage.request';\r\nimport { Router } from '@angular/router';\r\nimport { takeUntil } from 'rxjs';\r\nimport { DestroyableComponent, FormButtonsComponent, LoadingComponent } from 'menlo-lib';\r\n\r\ntype ApplianceUsageForm = {\r\n    applianceId: FormControl<number>;\r\n    hoursOfUse: FormControl<number>;\r\n};\r\n\r\ntype ElectricityCaptureForm = {\r\n    date: FormControl<Date>;\r\n    units: FormControl<number>;\r\n    applianceUsages: FormArray<FormGroup<ApplianceUsageForm>>;\r\n};\r\n\r\n@Component({\r\n    selector: 'menlo-electricity-capture',\r\n    standalone: true,\r\n    imports: [CommonModule, ReactiveFormsModule, FormButtonsComponent, LoadingComponent],\r\n    template: ` <header class=\"d-flex flex-nowrap p-0\">\r\n            <h1 class=\"me-auto\">Electricity Capture</h1>\r\n            <menlo-form-buttons (submit)=\"onSubmit()\" (cancel)=\"onCancel()\"></menlo-form-buttons>\r\n        </header>\r\n        <article>\r\n            @if (loading()) {\r\n                <menlo-loading />\r\n            } @else {\r\n                <form [formGroup]=\"form\">\r\n                    <div class=\"form-floating\">\r\n                        <input type=\"date\" class=\"form-control\" id=\"date\" formControlName=\"date\" placeholder=\"Date\" />\r\n                        <label for=\"date\">Date</label>\r\n                    </div>\r\n                    <div class=\"form-group input-group\">\r\n                        <div class=\"form-floating\">\r\n                            <input type=\"number\" class=\"form-control\" id=\"units\" formControlName=\"units\" placeholder=\"Units\" />\r\n                            <label for=\"units\">Units</label>\r\n                        </div>\r\n                        <span class=\"input-group-text\">kW/h</span>\r\n                    </div>\r\n                </form>\r\n            }\r\n        </article>`,\r\n    styleUrl: './electricity-capture.component.scss',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ElectricityCaptureComponent extends DestroyableComponent {\r\n    public readonly form = new FormGroup<ElectricityCaptureForm>({\r\n        date: new FormControl<Date>(new Date(), { nonNullable: true }),\r\n        units: new FormControl<number>(0, { nonNullable: true }),\r\n        applianceUsages: new FormArray<FormGroup<ApplianceUsageForm>>([])\r\n    });\r\n\r\n    public readonly loading = this._utilitiesService.loading;\r\n\r\n    constructor(\r\n        private readonly _utilitiesService: UtilitiesService,\r\n        private readonly _router: Router\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.form.reset();\r\n    }\r\n\r\n    public onSubmit(): void {\r\n        const request: CaptureElectricityUsageRequest = CaptureElectricityUsageRequestFactory.create(\r\n            this.form.value.date ?? new Date(),\r\n            this.form.value.units ?? 0\r\n        );\r\n        this._utilitiesService\r\n            .captureElectricalUsage(request)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe(() => {\r\n                this.form.reset();\r\n                this._router.navigate(['../dashboard']);\r\n            });\r\n    }\r\n}\r\n",
            "styleUrl": "./electricity-capture.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_utilitiesService",
                        "type": "UtilitiesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "_utilitiesService",
                        "type": "UtilitiesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "DestroyableComponent"
            ]
        },
        {
            "name": "ElectricityPurchaseComponent",
            "id": "component-ElectricityPurchaseComponent-26178d29e286200211650be63f39607d7009d956bc1053db87bb393382b616259372028878c3ee29c155cf03670554fdeec85f1b3efc912db27ef11e656614bc",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-purchase/electricity-purchase.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "menlo-electricity-purchase",
            "styleUrls": [],
            "styles": [],
            "template": "<header class=\"d-flex flex-nowrap p-0\">\n    <h1 class=\"me-auto\">Electricity Purchase</h1>\n    <menlo-form-buttons (submit)=\"onSubmit()\" (cancel)=\"onCancel()\"></menlo-form-buttons>\n</header>\n<article>\n    @if (loading()) {\n        <menlo-loading />\n    } @else {\n        <form [formGroup]=\"form\">\n            <div class=\"form-floating\">\n                <input type=\"date\" class=\"form-control\" id=\"date\" formControlName=\"date\" placeholder=\"Date\" />\n                <label for=\"date\">Date</label>\n            </div>\n            <div class=\"form-group input-group\">\n                <div class=\"form-floating\">\n                    <input type=\"number\" class=\"form-control\" id=\"units\" formControlName=\"units\" placeholder=\"Units\" />\n                    <label for=\"units\">Units</label>\n                </div>\n                <span class=\"input-group-text\">kW/h</span>\n            </div>\n            <div class=\"form-group input-group\">\n                <span class=\"input-group-text\">R</span>\n                <div class=\"form-floating\">\n                    <input type=\"number\" class=\"form-control\" id=\"cost\" formControlName=\"cost\" placeholder=\"Cost\" pattern=\"#.##\" />\n                    <label for=\"cost\">Cost</label>\n                </div>\n            </div>\n        </form>\n    }\n</article>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup<ElectricityPurchaseForm>({\r\n        date: new FormControl<Date>(new Date(), { nonNullable: true }),\r\n        units: new FormControl<number>(0, { nonNullable: true }),\r\n        cost: new FormControl<number>(0, { nonNullable: true })\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "this._utilitiesService.loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormButtonsComponent",
                    "type": "component"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { DestroyableComponent, FormButtonsComponent, LoadingComponent } from 'menlo-lib';\r\nimport { ElectricityPurchaseRequest, ElectricityPurchaseRequestFactory } from '../electricity-purchase.request';\r\nimport { takeUntil } from 'rxjs';\r\nimport { UtilitiesService } from '@utilities/utilities.service';\r\nimport { Router } from '@angular/router';\r\n\r\ntype ElectricityPurchaseForm = {\r\n    date: FormControl<Date>;\r\n    units: FormControl<number>;\r\n    cost: FormControl<number>;\r\n};\r\n\r\n@Component({\r\n    selector: 'menlo-electricity-purchase',\r\n    standalone: true,\r\n    imports: [CommonModule, ReactiveFormsModule, FormButtonsComponent, LoadingComponent],\r\n    template: `\r\n        <header class=\"d-flex flex-nowrap p-0\">\r\n            <h1 class=\"me-auto\">Electricity Purchase</h1>\r\n            <menlo-form-buttons (submit)=\"onSubmit()\" (cancel)=\"onCancel()\"></menlo-form-buttons>\r\n        </header>\r\n        <article>\r\n            @if (loading()) {\r\n                <menlo-loading />\r\n            } @else {\r\n                <form [formGroup]=\"form\">\r\n                    <div class=\"form-floating\">\r\n                        <input type=\"date\" class=\"form-control\" id=\"date\" formControlName=\"date\" placeholder=\"Date\" />\r\n                        <label for=\"date\">Date</label>\r\n                    </div>\r\n                    <div class=\"form-group input-group\">\r\n                        <div class=\"form-floating\">\r\n                            <input type=\"number\" class=\"form-control\" id=\"units\" formControlName=\"units\" placeholder=\"Units\" />\r\n                            <label for=\"units\">Units</label>\r\n                        </div>\r\n                        <span class=\"input-group-text\">kW/h</span>\r\n                    </div>\r\n                    <div class=\"form-group input-group\">\r\n                        <span class=\"input-group-text\">R</span>\r\n                        <div class=\"form-floating\">\r\n                            <input type=\"number\" class=\"form-control\" id=\"cost\" formControlName=\"cost\" placeholder=\"Cost\" pattern=\"#.##\" />\r\n                            <label for=\"cost\">Cost</label>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            }\r\n        </article>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ElectricityPurchaseComponent extends DestroyableComponent {\r\n    public readonly form = new FormGroup<ElectricityPurchaseForm>({\r\n        date: new FormControl<Date>(new Date(), { nonNullable: true }),\r\n        units: new FormControl<number>(0, { nonNullable: true }),\r\n        cost: new FormControl<number>(0, { nonNullable: true })\r\n    });\r\n\r\n    public readonly loading = this._utilitiesService.loading;\r\n\r\n    constructor(\r\n        private readonly _utilitiesService: UtilitiesService,\r\n        private readonly _router: Router\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const request: ElectricityPurchaseRequest = ElectricityPurchaseRequestFactory.create(\r\n            this.form.value.date ?? new Date(),\r\n            this.form.value.units ?? 0,\r\n            this.form.value.cost ?? 0\r\n        );\r\n        this._utilitiesService\r\n            .captureElectricityPurchase(request)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe(() => {\r\n                this.form.reset();\r\n                this._router.navigate(['../dashboard']);\r\n            });\r\n    }\r\n\r\n    onCancel(): void {\r\n        this.form.reset();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_utilitiesService",
                        "type": "UtilitiesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "_utilitiesService",
                        "type": "UtilitiesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "DestroyableComponent"
            ]
        },
        {
            "name": "ElectricityUsageComponent",
            "id": "component-ElectricityUsageComponent-e2525c5ccccced5b3bceae26618099d3c7230388d501607e74c2d7fea1d0e1d5808d118cc171fe4f0c4fa34cb1c583012f5cda256f680cc4b5ec433713119b6a",
            "file": "projects/menlo-app/src/app/utilities/electricity/electricity-usage/electricity-usage.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DatePipe",
                    "type": "pipe"
                }
            ],
            "selector": "menlo-electricity-usage",
            "styleUrls": [],
            "styles": [],
            "template": "@if (loading()) {           <menlo-loading />\n       } @else {\n           <div class=\"d-flex justify-content-center h-50\">\n               <menlo-chart [data]=\"chartData()\" title=\"Electricity Usage\" type=\"line\" [scales]=\"chartScales\" />\n           </div>\n           <div class=\"h-50\">\n               <ag-grid-angular\n                   class=\"ag-theme-quartz ag-theme-quartz-auto-dark\"\n                   [rowData]=\"electricityUsage()\"\n                   [columnDefs]=\"columnDefs\"\n                   [defaultColDef]=\"defaultColDef\" />\n           </div>\n       }",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartData",
                    "defaultValue": "computed(this.getChartData)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "chartScales",
                    "defaultValue": "{\n        x: {\n            beginAtZero: true,\n            title: {\n                display: true,\n                text: 'Date'\n            }\n        },\n        y: {\n            beginAtZero: true,\n            title: {\n                display: true,\n                text: 'Usage'\n            }\n        }\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenloChartLinearScale",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "columnDefs",
                    "defaultValue": "[\n        {\n            field: 'date',\n            headerName: 'Date',\n            cellRenderer: (params: { value: DateOrString }) => formatDate(params.value, DateFormat.ShortDisplay)\n        },\n        { field: 'units', headerName: 'Units', type: 'numericColumn' }\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef[]",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "defaultColDef",
                    "defaultValue": "{\n        flex: 1\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColDef",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "electricityUsage",
                    "defaultValue": "input.required<ElectricityUsage[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125,
                        148
                    ],
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "getChartData",
                    "args": [],
                    "optional": false,
                    "returnType": "MenloChartData",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AgGridAngular"
                },
                {
                    "name": "ChartComponent",
                    "type": "component"
                },
                {
                    "name": "LoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { ColDef } from 'ag-grid-community';\nimport { ElectricityUsage } from './electricity-usage.model';\nimport { DatePipe } from '@angular/common';\nimport { ChartComponent, DateFormat, DateOrString, formatDate, LoadingComponent, MenloChartData, MenloChartLinearScale } from 'menlo-lib';\n\n@Component({\n    selector: 'menlo-electricity-usage',\n    standalone: true,\n    imports: [AgGridAngular, ChartComponent, LoadingComponent],\n    providers: [DatePipe],\n    template: ` @if (loading()) {\n            <menlo-loading />\n        } @else {\n            <div class=\"d-flex justify-content-center h-50\">\n                <menlo-chart [data]=\"chartData()\" title=\"Electricity Usage\" type=\"line\" [scales]=\"chartScales\" />\n            </div>\n            <div class=\"h-50\">\n                <ag-grid-angular\n                    class=\"ag-theme-quartz ag-theme-quartz-auto-dark\"\n                    [rowData]=\"electricityUsage()\"\n                    [columnDefs]=\"columnDefs\"\n                    [defaultColDef]=\"defaultColDef\" />\n            </div>\n        }`,\n    styleUrl: './electricity-usage.component.scss',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ElectricityUsageComponent {\n    public readonly electricityUsage = input.required<ElectricityUsage[]>();\n    public readonly loading = input.required<boolean>();\n\n    public readonly chartData = computed(this.getChartData);\n\n    public readonly chartScales: MenloChartLinearScale = {\n        x: {\n            beginAtZero: true,\n            title: {\n                display: true,\n                text: 'Date'\n            }\n        },\n        y: {\n            beginAtZero: true,\n            title: {\n                display: true,\n                text: 'Usage'\n            }\n        }\n    };\n\n    public readonly columnDefs: ColDef[] = [\n        {\n            field: 'date',\n            headerName: 'Date',\n            cellRenderer: (params: { value: DateOrString }) => formatDate(params.value, DateFormat.ShortDisplay)\n        },\n        { field: 'units', headerName: 'Units', type: 'numericColumn' }\n    ];\n\n    public readonly defaultColDef: ColDef = {\n        flex: 1\n    };\n\n    private getChartData(): MenloChartData {\n        const usages: number[] = this.electricityUsage().map(usage => usage.usage);\n\n        return {\n            labels: this.electricityUsage().map(usage => formatDate(usage.date, DateFormat.ShortDisplay)),\n            datasets: [\n                {\n                    label: 'Electricity Usage',\n                    data: usages,\n                    pointStyle: 'circle',\n                    pointRadius: 10\n                },\n                {\n                    label: 'Average Usage',\n                    data: usages.map(() => usages.reduce((acc, val) => acc + val, 0) / usages.length),\n                    pointStyle: 'circle',\n                    pointRadius: 5\n                }\n            ]\n        };\n    }\n}\n",
            "styleUrl": "./electricity-usage.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-06ecdc7a975f5e66a1d3aa96b2914757d8763f803964a1fb0a45132b4e6360b80e068a377fc7d5a5b4a6607fc8104628d0e7dc7b5c5cad1a4a5df857b2a1b3f9",
            "file": "projects/menlo-app/src/app/home/home.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "menlo-home",
            "styleUrls": [],
            "styles": [],
            "template": "<header class=\"d-flex flex-nowrap p-0\"><h1 class=\"me-auto\">Dashboard</h1></header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'menlo-home',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `<header class=\"d-flex flex-nowrap p-0\"><h1 class=\"me-auto\">Dashboard</h1></header>`,\r\n    styleUrl: './home.component.scss',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HomeComponent {}\r\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "UtilitiesDashboardComponent",
            "id": "component-UtilitiesDashboardComponent-30333a8645d7b9c9ac04729fe214a69a6dd851c7ee50b2c76eed2b28d7af29a2a3d2a7af2ae42ed572b5bb58bebdf8d3e2ca1770c83047497efbc485f7b348e5",
            "file": "projects/menlo-app/src/app/utilities/utilities-dashboard/utilities-dashboard.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<header class=\"d-flex flex-nowrap p-0\">            <h1 class=\"me-auto\">Utilities</h1>\n            <!-- add the buttons to a div with 1 px to prevent them from filling the whole box -->\n            <div class=\"px-1\">\n                <div class=\"btn-group\" role=\"group\">\n                    <a class=\"btn btn-primary text-nowrap\" routerLink=\"../electricity/usage\" role=\"button\" id=\"addElectricityUsage\">\n                        <span class=\"material-symbols-outlined align-text-bottom\">bolt</span>\n                        Add\n                    </a>\n                    <div class=\"btn-group\" role=\"group\">\n                        <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"></button>\n                        <ul class=\"dropdown-menu\">\n                            <li>\n                                <a class=\"dropdown-item\" routerLink=\"../electricity/purchase\">\n                                    <span class=\"material-symbols-outlined align-text-bottom\">shopping_cart</span>\n                                    Electricity Purchase\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </header>\n        <article class=\"h-100\">\n            <h3>Electricity Usage</h3>\n            <menlo-electricity-usage [electricityUsage]=\"electricityUsage()\" />\n        </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "electricityUsage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Signal<ElectricityUsage[]>",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setupElectricityUsageObservable",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ElectricityUsage[]>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "RouterLinkWithHref"
                },
                {
                    "name": "ElectricityUsageComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, CommonModule, JsonPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Signal } from '@angular/core';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { ElectricityUsageComponent } from '../electricity/electricity-usage/electricity-usage.component';\nimport { UtilitiesService } from '@utilities/utilities.service';\nimport { map, Observable, takeUntil } from 'rxjs';\nimport { ElectricityUsageQueryFactory } from '@utilities/electricity';\nimport { ElectricityUsage } from '@utilities/electricity/electricity-usage/electricity-usage.model';\nimport { DestroyableComponent } from 'menlo-lib';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n@Component({\n    standalone: true,\n    imports: [AsyncPipe, JsonPipe, RouterLinkWithHref, ElectricityUsageComponent],\n    template: `<header class=\"d-flex flex-nowrap p-0\">\n            <h1 class=\"me-auto\">Utilities</h1>\n            <!-- add the buttons to a div with 1 px to prevent them from filling the whole box -->\n            <div class=\"px-1\">\n                <div class=\"btn-group\" role=\"group\">\n                    <a class=\"btn btn-primary text-nowrap\" routerLink=\"../electricity/usage\" role=\"button\" id=\"addElectricityUsage\">\n                        <span class=\"material-symbols-outlined align-text-bottom\">bolt</span>\n                        Add\n                    </a>\n                    <div class=\"btn-group\" role=\"group\">\n                        <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"></button>\n                        <ul class=\"dropdown-menu\">\n                            <li>\n                                <a class=\"dropdown-item\" routerLink=\"../electricity/purchase\">\n                                    <span class=\"material-symbols-outlined align-text-bottom\">shopping_cart</span>\n                                    Electricity Purchase\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </header>\n        <article class=\"h-100\">\n            <h3>Electricity Usage</h3>\n            <menlo-electricity-usage [electricityUsage]=\"electricityUsage()\" />\n        </article>`,\n    styleUrl: './utilities-dashboard.component.scss',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UtilitiesDashboardComponent extends DestroyableComponent {\n    public readonly electricityUsage: Signal<ElectricityUsage[]>;\n\n    constructor(private readonly _utilitiesService: UtilitiesService) {\n        super();\n        this.electricityUsage = toSignal(this.setupElectricityUsageObservable(), { initialValue: [] });\n    }\n\n    private setupElectricityUsageObservable(): Observable<ElectricityUsage[]> {\n        const today = new Date();\n        const startDate = new Date(today.getFullYear(), today.getMonth(), 1);\n        const request = ElectricityUsageQueryFactory.create(startDate, today);\n        return this._utilitiesService.getElectricityUsage(request).pipe(\n            map(response =>\n                response.map(item => {\n                    const usage = new ElectricityUsage();\n                    usage.date = item.date;\n                    usage.units = item.units;\n                    usage.usage = item.usage;\n                    for (const appliance of item.applianceUsages) {\n                        usage.applianceUsage.push({\n                            applianceId: appliance.applianceId,\n                            hoursOfUse: appliance.hoursOfUse\n                        });\n                    }\n                    return usage;\n                })\n            ),\n            takeUntil(this.destroyed$)\n        );\n    }\n}\n",
            "styleUrl": "./utilities-dashboard.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_utilitiesService",
                        "type": "UtilitiesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "_utilitiesService",
                        "type": "UtilitiesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "DestroyableComponent"
            ]
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-app/src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n    providers: [\r\n        provideZoneChangeDetection({ eventCoalescing: true }),\r\n        provideRouter(routes, withEnabledBlockingInitialNavigation()),\r\n        provideHttpClient()\r\n    ]\r\n}"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-app/src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenloRoutes",
                "defaultValue": "[\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'home'\r\n    },\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        title: 'Home',\r\n        data: {\r\n            iconName: 'home'\r\n        }\r\n    },\r\n    {\r\n        path: 'utilities',\r\n        loadChildren: async () => (await import('@utilities/utilities.routes')).routes,\r\n        title: 'Utilities',\r\n        data: {\r\n            iconName: 'water_ec'\r\n        }\r\n    }\r\n]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/menlo-app/src/app/utilities/utilities.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'dashboard'\n    },\n    {\n        path: 'dashboard',\n        component: UtilitiesDashboardComponent\n    },\n    {\n        path: 'electricity/usage',\n        component: ElectricityCaptureComponent\n    },\n    {\n        path: 'electricity/purchase',\n        component: ElectricityPurchaseComponent\n    }\n]"
            }
        ],
        "functions": [
            {
                "name": "compareDates",
                "file": "projects/menlo-app/src/app/dates/date-comparer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "date1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "date2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "date1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "date2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideUtilitiesService",
                "file": "projects/menlo-app/src/app/utilities/utilities.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Provider[]"
            },
            {
                "name": "provideUtilitiesServiceTesting",
                "file": "projects/menlo-app/src/app/utilities/utilities.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "null"
                    }
                ],
                "returnType": "[]",
                "jsdoctags": [
                    {
                        "name": "options",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "null",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "updateColorScheme",
                "file": "projects/menlo-app/src/main.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "event",
                        "type": "MediaQueryListEvent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "event",
                        "type": "MediaQueryListEvent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "ApplianceUsageForm",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/menlo-app/src/app/utilities/electricity/electricity-capture/electricity-capture.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ElectricityCaptureForm",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/menlo-app/src/app/utilities/electricity/electricity-capture/electricity-capture.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ElectricityPurchaseForm",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/menlo-app/src/app/utilities/electricity/electricity-purchase/electricity-purchase.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "MenloRouteData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/menlo-app/src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "MenloRoutes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/menlo-app/src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/menlo-app/src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-app/src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n    providers: [\r\n        provideZoneChangeDetection({ eventCoalescing: true }),\r\n        provideRouter(routes, withEnabledBlockingInitialNavigation()),\r\n        provideHttpClient()\r\n    ]\r\n}"
                }
            ],
            "projects/menlo-app/src/app/app.routes.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-app/src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenloRoutes",
                    "defaultValue": "[\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'home'\r\n    },\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        title: 'Home',\r\n        data: {\r\n            iconName: 'home'\r\n        }\r\n    },\r\n    {\r\n        path: 'utilities',\r\n        loadChildren: async () => (await import('@utilities/utilities.routes')).routes,\r\n        title: 'Utilities',\r\n        data: {\r\n            iconName: 'water_ec'\r\n        }\r\n    }\r\n]"
                }
            ],
            "projects/menlo-app/src/app/utilities/utilities.routes.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/menlo-app/src/app/utilities/utilities.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'dashboard'\n    },\n    {\n        path: 'dashboard',\n        component: UtilitiesDashboardComponent\n    },\n    {\n        path: 'electricity/usage',\n        component: ElectricityCaptureComponent\n    },\n    {\n        path: 'electricity/purchase',\n        component: ElectricityPurchaseComponent\n    }\n]"
                }
            ]
        },
        "groupedFunctions": {
            "projects/menlo-app/src/app/dates/date-comparer.ts": [
                {
                    "name": "compareDates",
                    "file": "projects/menlo-app/src/app/dates/date-comparer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "date1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "date2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "date1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "date2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/menlo-app/src/app/utilities/utilities.service.ts": [
                {
                    "name": "provideUtilitiesService",
                    "file": "projects/menlo-app/src/app/utilities/utilities.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Provider[]"
                },
                {
                    "name": "provideUtilitiesServiceTesting",
                    "file": "projects/menlo-app/src/app/utilities/utilities.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "returnType": "[]",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/menlo-app/src/main.ts": [
                {
                    "name": "updateColorScheme",
                    "file": "projects/menlo-app/src/main.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "event",
                            "type": "MediaQueryListEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MediaQueryListEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/menlo-app/src/app/utilities/electricity/electricity-capture/electricity-capture.component.ts": [
                {
                    "name": "ApplianceUsageForm",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/menlo-app/src/app/utilities/electricity/electricity-capture/electricity-capture.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "ElectricityCaptureForm",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/menlo-app/src/app/utilities/electricity/electricity-capture/electricity-capture.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "projects/menlo-app/src/app/utilities/electricity/electricity-purchase/electricity-purchase.component.ts": [
                {
                    "name": "ElectricityPurchaseForm",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/menlo-app/src/app/utilities/electricity/electricity-purchase/electricity-purchase.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "projects/menlo-app/src/app/app.routes.ts": [
                {
                    "name": "MenloRouteData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/menlo-app/src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "MenloRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/menlo-app/src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/menlo-app/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/dates/date-comparer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compareDates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/capture-electricity-usage.request.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CaptureElectricityUsageRequest",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/capture-electricity-usage.request.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CaptureElectricityUsageRequestFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/capture-electricity-usage.request.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApplianceUsageInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-capture/electricity-capture.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElectricityCaptureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-purchase.request.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ElectricityPurchaseRequest",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-purchase.request.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ElectricityPurchaseRequestFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-purchase/electricity-purchase.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElectricityPurchaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-usage.query.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ElectricityUsageQuery",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-usage.query.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ElectricityUsageQueryFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-usage.response.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApplianceUsageResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-usage.response.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ElecricityUsageResponse",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-usage/electricity-usage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElectricityUsageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-usage/electricity-usage.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ElectricityUsage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/electricity/electricity-usage/electricity-usage.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApplianceUsage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/utilities-dashboard/utilities-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UtilitiesDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/utilities.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/utilities.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UtilitiesService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/utilities.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UtilitiesServiceTestingOptions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/utilities.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideUtilitiesService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/app/utilities/utilities.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideUtilitiesServiceTesting",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/menlo-app/src/main.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "updateColorScheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}